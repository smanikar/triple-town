#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 2303 0 27 3 12 #"#lang racket"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #"; Task for 1/22"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #"; function that takes a move and put it on the board and makes a col"
 #"lapse"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 18 #"; A tile is either"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 13 #";   - 'blank "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 12 #";   - 'grass"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 11 #";   - 'bush"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 11 #";   - 'tree"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 12 #";   - 'shack"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 12 #";   - 'house"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 14 #";   - 'mansion"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 13 #";   - 'castle"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 30 #"; next-tile : symbol -> symbol"
0 0 23 29 1 #"\n"
0 0 17 3 32 #"; Gets the next tile of cur-tile"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"    "
0 0 17 3 36 #";[(symbol=? cur-tile 'blank) 'grass]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 3 #")  "
0 0 20 3 1 #"'"
0 0 14 3 4 #"tree"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"tree"
0 0 23 3 3 #")  "
0 0 20 3 1 #"'"
0 0 14 3 5 #"shack"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"shack"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 5 #"house"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"house"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 7 #"mansion"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"mansion"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 6 #"castle"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"error"
0 0 23 3 2 #" ("
0 0 14 3 6 #"format"
0 0 23 3 1 #" "
0 0 19 3 18 #"\"not a tile: ~s~n\""
0 0 23 3 1 #" "
0 0 14 3 8 #"cur-tile"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 3 #")  "
0 0 20 3 1 #"'"
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"tree"
0 0 23 3 3 #")  "
0 0 20 3 1 #"'"
0 0 14 3 5 #"shack"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"shack"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 5 #"house"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"house"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 7 #"mansion"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"mansion"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 6 #"castle"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"test"
0 0 23 3 2 #") "
0 0 19 3 18 #"\"not a tile: test\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; A tile is"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";  (make-tile symbol num num boolean)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"tile"
0 0 23 3 3 #" (("
0 0 14 3 3 #"val"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #" ("
0 0 14 3 3 #"chk"
0 0 23 3 1 #" "
0 0 22 3 9 #"#:mutable"
0 0 23 3 3 #")) "
0 0 22 3 13 #"#:transparent"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-board"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 10 #"board-size"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-board"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"board1"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"board1b"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"board1a"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 2 #"  "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";get-tile: list-of-list-of-tiles num num -> tile"
0 0 23 29 1 #"\n"
0 0 17 3 58
#"; Returns the 'tile' with coordinates ('x','y') on 'board'"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"list-ref"
0 0 23 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7         325 4           0 0           0 53 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 6 #"board1"
0 0 23 3 2 #"  "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 7 #"board1a"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0           0 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";on-board : list-of-list-of-tiles num num -> bool"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";Checks if a given tile ('x','y') is on the 'board'"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #") "
0 0 20 3 2 #"#f"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 10 #"board-size"
0 0 23 3 3 #") ("
0 0 14 3 1 #">"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"<"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 10 #"board-size"
0 0 23 3 3 #") ("
0 0 14 3 1 #">"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 4 #"))) "
0 0 20 3 2 #"#t"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7         385 4           0 0           0 63 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"  "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 2 #"#f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 23 3 1 #" "
0 0 14 3 6 #"board1"
0 0 23 3 2 #"  "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 23 3 1 #" "
0 0 14 3 7 #"board1a"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 2 #") "
0 0 20 3 2 #"#f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 23 3 1 #" "
0 0 14 3 6 #"board1"
0 0 23 3 2 #"  "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 2 #"#f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0 0 23 29 1 #"\n"
0           0 0 0 23 29 1 #"\n"
0 0 17 3 62
#"; replace-neighbour-row list-of-tiles num num -> list-of-tiles"
0 0 23 29 1 #"\n"
0 0 17 3 65
#"; Find and replace all visited tiles with blank except ('x', 'y')"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 8 #"tile-chk"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 23 3 2 #" ("
0 0 14 3 6 #"tile-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")) "
0 0 14 3 1 #"x"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 6 #"equal?"
0 0 23 3 2 #" ("
0 0 14 3 6 #"tile-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")) "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 5 #"list*"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 2 #" ("
0 0 14 3 9 #"next-tile"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"list*"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 6 #"tile-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 6 #"tile-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                              "
0 0 20 3 2 #"#t"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 5 #"))])]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 5 #"list*"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 6 #"tile-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 6 #"tile-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 27 #"                          ("
0 0 14 3 8 #"tile-chk"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 21 #"                    ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 7 #"))])]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7        1513 4           0 0           0 251 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 46 #"                                             ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 2 #"  "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 46 #"                                             ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 2 #"  "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"tree"
0 0 23 3 2 #"  "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 46 #"                                             ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"bush"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 46 #"                                             ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #")) "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"tree"
0 0 23 3 2 #"  "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"check-error"
0 0 23 3 2 #" ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 19 3 19 #"\"not a tile: blank\""
0 0 23 3 2 #"))"
0           0 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";replace-neighbours : list-of-list-of-tiles num num -> list-of-list-"
 #"of-tiles"
) 0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";Finds and replaces all neighbours of ('x','y') on 'board' with high"
 #"er field"
) 0 0 23 29 1 #"\n"
0 0 17 3 7 #";Algo -"
0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";Scan through the entire board, and replace all visited tiles except"
 #" this-tile"
) 0 0 23 29 1 #"\n"
0 0 17 3 14 #";with 'blank. "
0 0 23 29 1 #"\n"
0 0 17 3 35 #";Replace this tile with 'next-tile'"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"replace-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 21 #"replace-neighbour-row"
0 0 23 3 1 #"("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 17 #"replace-neighbour"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #") "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 2 #";("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 17 #"replace-neighbour"
0 0 17 3 1 #" "
0 0 17 3 6 #"board1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 10 #") board1a)"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 53 #";(check-equal? (replace-neighbour board1 1 0) board1)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 17 #"replace-neighbour"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"#t"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 5 #" #t))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"                                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"#t"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"blank"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"0"
0 0 17 3 3 #" 0)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"bush"
0 0 17 3 2 #"  "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"#t"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"blank"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 5 #" #t))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 23 #"                      ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"blank"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"#t"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"blank"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 7 #" #f))))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 67
#"; valid-neighbour? : list-of-list-of-tile num num symbol -> boolean"
0 0 23 29 1 #"\n"
0 0 17 3 60
#"; Checks if a given tile is a valid neighbour based on 'val'"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 3 #"val"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 9 #"on-board?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #")) "
0 0 14 3 3 #"val"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-chk"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"          "
0 0 20 3 2 #"#t"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";count-neighbour :  list-of-list-of-tile num num num -> num"
0 0 23 29 1 #"\n"
0 0 17 3 86
(
 #";Returns 'count', the number of relevant neighbouring tiles of ('x',"
 #"'y') that are same"
) 0 0 23 29 1 #"\n"
0 0 17 3 6 #";Algo-"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";Increment count"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";Mark (x,y) as visited"
0 0 23 29 1 #"\n"
0 0 17 3 67
#";Visit all the valid neighbouring tiles(8) and call count-neighbour"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 13 #"set-tile-chk!"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #") "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #" ("
0 0 14 3 11 #"struct-copy"
0 0 23 3 1 #" "
0 0 14 3 4 #"tile"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 6 #";north"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 6 #";south"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 5 #";east"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 5 #";west"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 11 #";north-east"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 11 #";north-west"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 11 #";south-east"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"       "
0 0 17 3 11 #";south-west"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 16 #"valid-neighbour?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 9 #"this-tile"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 14 3 1 #"c"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 5 #"])]))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"count-neighbour"
0 0 17 3 1 #" "
0 0 17 3 5 #"empty"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 5 #"0) 0)"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"count-neighbour"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 2 #") "
0 0 17 3 5 #"empty"
0 0 17 3 2 #") "
0 0 17 3 5 #"empty"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 6 #" 0) 1)"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 17 #" (count-neighbour"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 7 #" 0 #f))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"blank"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"blank"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 8 #" 1 #f)))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                 "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 6 #" 0) 2)"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"count-neighbour"
0 0 17 3 1 #" "
0 0 17 3 7 #"board1b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 5 #"0) 3)"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"count-neighbour"
0 0 17 3 1 #" "
0 0 17 3 6 #"board1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 5 #"0) 1)"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 15 #"count-neighbour"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 5 #" #f))"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";                                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tile"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"blank"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 4 #") 3)"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0 0 23 29 1 #"\n"
0 0 17 3 50 #"; reset-check-row : list-of-tiles -> list-of-tiles"
0 0 23 29 1 #"\n"
0 0 17 3 40 #"; Resets all check fields in 'row' to #f"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"reset-check-row"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #") "
0 0 14 3 3 #"row"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 6 #"tile-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 30 #"                             ("
0 0 14 3 6 #"tile-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 29 #"                             "
0 0 20 3 2 #"#f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 15 #"reset-check-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"row"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7         775 4           0 0           0 128 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"reset-check-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"reset-check-row"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 39 #"                                      ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 39 #"                                      ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 4 #"))))"
0           0 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 62
#"; reset-check : list of list of tiles -> list of list of tiles"
0 0 23 29 1 #"\n"
0 0 17 3 42 #"; Resets all check fields in 'board' to #f"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"reset-check"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #") "
0 0 14 3 5 #"board"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 15 #"reset-check-row"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 11 #"reset-check"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7        1057 4           0 0           0 175 0 23 3 1 #"("
0 0 15 3 7 #"module+"
0 0 23 3 1 #" "
0 0 14 3 4 #"test"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 11 #"reset-check"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 11 #"reset-check"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 11 #"reset-check"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 3 #") ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  )"
0           0 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 47 #"; collapse-board : list-of-list-of-tile -> void"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #"; Collapse all possible 3 or more occurances of 'val' into next 'val"
 #"' in 'board'"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"collapse-board"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 3 #"lot"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 8 #"for-each"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tile"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-board"
0 0 23 3 2 #" ("
0 0 14 3 11 #"reset-check"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-board"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 1 #" "
0 0 14 3 4 #"tile"
0 0 23 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-board"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 6 #"tile-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"tile"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 6 #"tile-y"
0 0 23 3 1 #" "
0 0 14 3 4 #"tile"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                    "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-board"
0 0 23 3 2 #" ("
0 0 14 3 17 #"replace-neighbour"
0 0 23 3 1 #" "
0 0 14 3 10 #"game-board"
0 0 23 3 2 #" ("
0 0 14 3 6 #"tile-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"tile"
0 0 23 3 3 #") ("
0 0 14 3 6 #"tile-y"
0 0 23 3 1 #" "
0 0 14 3 4 #"tile"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 14 3 5 #"empty"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"            "
0 0 14 3 5 #"empty"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 3 #"lot"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 14 3 10 #"game-board"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 14 #"collapse-board"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 7         493 4           0 0           0 81 0 17 3 69
(
 #";collapse-tile : list-of-list-of-tile num num -> list-of-list-of-til"
 #"e"
) 0 0 23 29 1 #"\n"
0 0 17 3 83
(
 #";Collapses all neighbours of ('x','y') based on 'val' of 'tile'('x',"
 #"'y') in 'board'"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";Algo-"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";check all neighbours of xy"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";if xy is blank, return board"
0 0 23 29 1 #"\n"
0 0 17 3 63
#";if (> 1)neighbours are the same as xy, replace them with blank"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";   and replace xy with next-tile"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";else return board"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"collapse-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"tile-val"
0 0 23 3 2 #" ("
0 0 14 3 8 #"get-tile"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #")) "
0 0 20 3 1 #"'"
0 0 14 3 5 #"blank"
0 0 23 3 2 #") "
0 0 14 3 5 #"board"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 15 #"count-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 3 #") ("
0 0 14 3 17 #"replace-neighbour"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 5 #"board"
0 0 23 3 3 #"]))"
0           0 0           0
